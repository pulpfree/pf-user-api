{
  fetchSiteById(_id: "580e3d0b722179828f867ff0") {
    _id
    active
    credentialKeyPassword
    credentialKeyUsername
    collectionNm
    dbNm
    domain
    name
    resetURI
  }
}

{
  fetchSites {
    _id
    active
    credentialKeyPassword
    credentialKeyUsername
    collectionNm
    dbNm
    domain
    name
    resetURI
  }
}

{
  fetchSites(domain: "ca.example.foo4") {
    _id
    active
    credentialKeyPassword
    credentialKeyUsername
    collectionNm
    dbNm
    domain
    name
    resetURI
  }
}


{
  site(name: "Universal Sales") {
    name
    active
    domain
  }
}

{
  fetchUser(domainID: "580e3d0b722179828f867ff0", email: "rond@webbtech.net") {
    _id
    email
    active
  }
}

{
  fetchUsers(domainID: "580e3d0b722179828f867ff0") {
    _id
    email
    active
    scope
    scopeBits
  }
}

mutation {
  createUser(domainID: "580e3d0b722179828f867ff0", active: true, email: "test@me.com", password: "MyTestingPass1", scope: ["admin", "siteuser"]) {
    _id
    email
    active
    scope
    scopeBits
  }
}

mutation {
  updateUser(domainID: "580e3d0b722179828f867ff0", userID: "580e40ab025690863119ce85", active: true) {
    _id
    email
    active
    scope
    scopeBits
  }
}

mutation createSite($fields:SiteInput!) {
  createSite(input:$fields) {
    _id
    domain
    name
    resetURI
  }
}
{
  "fields": {
    "credentialKeyPassword": "password",
    "credentialKeyUsername": "email",
    "collectionNm": "users",
    "dbNm": "test-db",
    "domain": "ca.example.foo123",
    "name": "My New Site",
    "resetURI": "http://foo.com/auth"
  }
}

mutation updateSite($_id:ID!, $fields:SiteInput!) {
  updateSite(_id: $_id, input:$fields) {
    _id
    domain
    name
    resetURI
  }
}
{
  "_id": "5818f434b5dfd908040059f0",
  "fields": {
    "credentialKeyPassword": "password",
    "credentialKeyUsername": "email",
    "collectionNm": "users",
    "dbNm": "test-db",
    "domain": "ca.example.fooie",
    "name": "My New Site",
    "resetURI": "http://foo.com/auth"
  }
}

mutation authUser($fields: AuthInput) {
  authUser(input: $fields) {
    id
    email
    contact {
      first
      last
    }
    token
  }
}
{
  "fields": {
    "email": "rond@webbtech.net",
    "password": "my-new-passwd",
    "domainID": "local.pf-user"
  }
}

mutation authValidate($fields: AuthValidateInput) {
  authValidate(input:$fields) {
    exp
    iat
    iss
    jti
  }
}
{
  "fields": {
    "domainID": "local.pf-user",
    "token": "<token>"
  }
}

mutation authResetPasswd($fields: AuthResetPasswdInput) {
  authResetPasswd(input: $fields) {
    result
    ok
  }
}
{
  "fields": {
    "email": "rond@webbtech.net",
    "domainID": "local.pf-user"
  }
}

mutation authResetPasswd($fields: AuthResetPasswdInput) {
  authResetPasswd(input: $fields) {
    result
    ok
  }
}
{
  "fields": {
    "email": "rond@webbtech.net",
    "domainID": "local.pf-user"
  }
}

mutation authResetToken($fields: AuthResetTokenInput) {
  authResetToken(input: $fields) {
    id
    contact {
      first
      last
    }
    token
    scope {
      id
      label
    }
    scopeBits
  }
}
{
  "fields": {
    "email": "rond@webbtech.net",
    "domainID": "local.pf-user",
    "password": "my-new-passwd",
    "resetToken": "<token>"
  }
}
